"""
    1 打开文件
    2 读写操作
    3 关闭文件

    1、open函数可以打开已经存在的文件 或者 创建一个新文件
        open(name,mode) name：名字  mode：模式（只读，写入，，追加）
        close() 关闭文件  文件操后要关闭文件 不然会占CPU

        主要的 r:只读 w：只写  a:追加 w+：读写并覆盖员内容  r+：读写

        r ,以只读方式打开文件。文件的指针将会放在文件的开头。这是默认模式。
        rb,以二进制格式打开一个文件用于只读。文件指针将会放在文件的开头。这是默认模式。
        r+,打开一个文件用于读写。文件指针将会放在文件的开头。
        rb+,以二进制格式打开一个文件用于读写。文件指针将会放在文件的开头。
        w,打开一个文件只用于写入。如果该文件已存在则打开文件,并从开头开始编辑,即原有内  容会被删除。如果该文件不存在,创建新文件。
        wb以二进制格式打开一个文件只用于写入。如果该文件已存在则打开文件,并从开头开始编辑,即原有内容会被删除。如果该文件不存在,创建新文件。
        w+打开一个文件用于读写。如果该文件已存在则打开文件,并从开头开始编辑,即原有内容会被删除。如果该文件不存在,创建新文件。
        wb+ 以二进制格式打开一个文件用于读写。如果该文件已存在则打开文件,并从开头开始编辑,即原有内容会被删除。如果该文件不存在,创建新文件。
        a、打开一个文件用于追加。如果该文件已存在,文件指针将会放在文件的结尾。也就是说,新的内容将会被写入到已有内容之后。如果该文件不存在,创建新文件进行写入。回中Jo圆t

    2、读取：
            read():读取字节
                文件对象.read(num) num表示读取数据的长度（单位字节）若未传入num 则读取全部
            readline():读取一行
            readlines()：读取整个文件 返回一个列表
                文件对象.readlines()
            tell():返回一个整数 表示当前文件指针的位置（到文件开头的bit数）
            seek()：移动指针
                文件对象.seek(偏移量，起始位置)
                0:文件开头 1:当前位置 2:文件结尾
    3、close()
"""
f=open("tt.txt","w")
f.write("sss")
f.close()
f=open("tt.txt","r")
da=f.readlines()
print(da)
f.close()
f=open("tt.txt","a")
f.write("fff")
print(da)
f.close()
f=open("tt.txt","r")
da=f.readlines()
print(da)
f.close()
f=open("tt.txt","r+")
f.write("111")

f.close()
f=open("tt.txt","r")
da=f.read(2)
print(da)
f.close()




